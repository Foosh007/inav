/*
 * This file is part of INAV.
 *
 * INAV is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * INAV is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with INAV.  If not, see <http://www.gnu.org/licenses/>.
 *
 * This target has been autgenerated by bf2inav.py
 */

 #pragma once

 #define TARGET_BOARD_IDENTIFIER "DAKE"
 #define USBD_PRODUCT_STRING "DAKEFPVH743"

 //#define USE_HARDWARE_PREBOOT_SETUP

 //#define USE_TARGET_CONFIG
 
 #define DEFAULT_FEATURES ( \
     FEATURE_OSD           | \
     FEATURE_CURRENT_METER | \
     FEATURE_VBAT          | \
     FEATURE_TELEMETRY     | \
     FEATURE_LED_STRIP     | \
     FEATURE_BLACKBOX      | \
     FEATURE_AIRMODE         \
 )
 
 // UARTs
 #define USB_IO
 #define USE_VCP
 
 #define USE_UART1
 #define UART1_RX_PIN           PA10
 #define UART1_TX_PIN           PA9
 
 #define USE_UART2
 #define UART2_RX_PIN           PD6
 #define UART2_TX_PIN           PD5
 
 #define USE_UART3
 #define UART3_RX_PIN           PD9
 #define UART3_TX_PIN           PD8
 
 #define USE_UART4
 #define UART4_RX_PIN           PD0
 #define UART4_TX_PIN           PD1
 
 #define USE_UART5
 #define UART5_RX_PIN           PB5
 #define UART5_TX_PIN           PB6
 
 // Doesnt appear to map to the pins on board
 //#define USE_UART6
 //#define UART6_RX_PIN         PC7
 //#define UART6_TX_PIN         PC6
 
 #define USE_UART7
 #define UART7_RX_PIN           PE7
 #define UART7_TX_PIN           PE8
 
 #define USE_UART8
 #define UART8_RX_PIN           PE0
 #define UART8_TX_PIN           PE1
 
 #define SERIAL_PORT_COUNT      8
 #define DEFAULT_RX_TYPE        RX_TYPE_SERIAL
 #define SERIALRX_PROVIDER      SERIALRX_CRSF

 #define USE_TARGET_IMU_HARDWARE_DESCRIPTORS
 
 // *** SPI 1 ***
 #define USE_SPI
 #define USE_SPI_DEVICE_1
 #define SPI1_SCK_PIN           PA5
 #define SPI1_MISO_PIN          PA6
 #define SPI1_MOSI_PIN          PA7

 // Primary IMU options
 #define USE_IMU_ICM42688P
 #define ICM42688P_CS_PIN       PA4
 #define ICM42688P_SPI_BUS      BUS_SPI1
 #define IMU_ICM42688P_ALIGN    CW270_DEG
 #define ICM42688P_EXTI_PIN     PC4

 #define USE_IMU_ICM42605
 #define IMU_ICM42605_ALIGN     CW270_DEG
 #define ICM42605_SPI_BUS       BUS_SPI1
 #define ICM42605_CS_PIN        PA4
 #define ICM42605_EXTI_PIN      PC4

 
 #define USE_IMU_BMI270         //Current working driver for ACC
 #define BMI270_CS_PIN          PA4
 #define BMI270_SPI_BUS         BUS_SPI1
 #define IMU_BMI270_ALIGN       CW270_DEG
 #define BMI270_EXTI_PIN        PC4
 
 // Common primary gyro settings
 #define GYRO_1_SPI_INSTANCE    SPI1
 #define GYRO_1_ALIGN           CW270_DEG
 
 // Secondary IMU options
 #define USE_IMU_ICM42688P_2
 #define ICM42688P_CS_PIN_2     PB1
 #define ICM42688P_2_SPI_BUS    BUS_SPI1
 #define IMU_ICM42688P_2_ALIGN  CW90_DEG
 #define ICM42688P_EXTI_PIN_2   PB2

 #define USE_IMU_ICM42605_2
 #define IMU_ICM42605_2_ALIGN     CW90_DEG
 #define ICM42605_2_SPI_BUS       BUS_SPI1
 #define ICM42605_CS_PIN_2        PB1
 #define ICM42605_EXTI_PIN_2      PB2
 
 #define USE_IMU_BMI270_2       //Cuurent working driver for ACC
 #define BMI270_CS_PIN_2        PB1
 #define BMI270_2_SPI_BUS       BUS_SPI1
 #define IMU_BMI270_2_ALIGN     CW90_DEG
 #define BMI270_EXTI_PIN_2      PB2
 
 // Common secondary gyro settings
 #define GYRO_2_SPI_INSTANCE    SPI1
 #define GYRO_2_ALIGN           CW90_DEG
 
 // Enable dual gyro mode
 #define USE_DUAL_GYRO
 #define DEFAULT_GYRO_TO_USE    GYRO_CONFIG_USE_GYRO_BOTH
 
 // *** SPI 2 ***
 #define USE_SPI_DEVICE_2
 #define SPI2_SCK_PIN           PB13
 #define SPI2_MISO_PIN          PB14
 #define SPI2_MOSI_PIN          PB15

 // OSD
 #define USE_OSD
 #define USE_MAX7456
 #define MAX7456_CS_PIN         PB12
 #define MAX7456_SPI_BUS        BUS_SPI2
 #define MAX7456_SPI_INSTANCE   SPI2
 
 // *** SPI 3 ***
 #define USE_SPI_DEVICE_3
 #define SPI3_SCK_PIN           PC10
 #define SPI3_MISO_PIN          PC11
 #define SPI3_MOSI_PIN          PC12

 // *** SPI 4 ***
 #define USE_SPI_DEVICE_4
 #define SPI4_SCK_PIN PE12
 #define SPI4_MISO_PIN PE13
 #define SPI4_MOSI_PIN PE14
 
 // Blackbox
 
 #define USE_FLASHFS
 #define ENABLE_BLACKBOX_LOGGING_ON_SPIFLASH_BY_DEFAULT
 #define USE_FLASH_M25P16
 #define M25P16_SPI_BUS         BUS_SPI3
 #define M25P16_CS_PIN          PA15
 #define USE_FLASH_W25M
 #define W25M_SPI_BUS           BUS_SPI3
 #define W25M_CS_PIN            PA15
 #define USE_FLASH_W25M02G
 #define W25M02G_SPI_BUS        BUS_SPI3
 #define W25M02G_CS_PIN         PA15
 #define USE_FLASH_W25M512
 #define W25M512_SPI_BUS        BUS_SPI3
 #define W25M512_CS_PIN         PA15
 #define USE_FLASH_W25N01G
 #define W25N01G_SPI_BUS        BUS_SPI3
 #define W25N01G_CS_PIN         PA15
 // Additional flash chip support...
 #define FLASH_SPI_INSTANCE     SPI3

 // Blackbox default
 #define DEFAULT_BLACKBOX_DEVICE     BLACKBOX_DEVICE_FLASH
 
 // I2C / Baro / Mag
 #define USE_I2C
 #define USE_I2C_DEVICE_2
 #define I2C2_SCL               PB10
 #define I2C2_SDA               PB11
 
 // BARO
 #define USE_BARO
 #define USE_BARO_ALL
 #define BARO_I2C_BUS           BUS_I2C2
 #define BARO_I2C_INSTANCE      I2CDEV_2
 
 // MAG
 #define USE_MAG
 #define USE_MAG_ALL
 #define MAG_I2C_BUS            BUS_I2C2
 #define MAG_I2C_INSTANCE       I2CDEV_2
 
 // Other I2C devices
 #define TEMPERATURE_I2C_BUS    BUS_I2C2
 #define PITOT_I2C_BUS          BUS_I2C2
 #define USE_RANGEFINDER
 #define RANGEFINDER_I2C_BUS    BUS_I2C2
 
 // ADC
 #define USE_ADC
 #define ADC_INSTANCE           ADC1
 #define ADC_CHANNEL_1_PIN      PC1
 #define VBAT_ADC_CHANNEL       ADC_CHN_1
 #define ADC_CHANNEL_2_PIN      PC0
 #define CURRENT_METER_ADC_CHANNEL ADC_CHN_2
 #define ADC_CHANNEL_3_PIN      PC5
 #define RSSI_ADC_CHANNEL       ADC_CHN_3

 // For clarity, these match the ADC pins above but with Betaflight naming
 //#define ADC_VBAT_PIN PC1
 //#define ADC_CURR_PIN PC0
 //#define ADC_RSSI_PIN PC5
 
 // Additional ADC settings
 #define ADC1_DMA_OPT           9
 
 // PINIO
 #define USE_PINIO
 #define USE_PINIOBOX

 // Pin definitions
 #define PINIO1_PIN             PE2
 #define PINIO2_PIN             PE3
 #define PINIO3_PIN             PE4

 // Configuration: 
 // 0 = default state LOW (active HIGH)
 // 1 = inverted (active LOW)
 // 128 = initially ON
 // 129 = inverted and initially ON
 #define PINIO1_CONFIG          0  // Standard operation, initial state OFF
 #define PINIO2_CONFIG          0  // Standard operation, initial state OFF 
 #define PINIO3_CONFIG          0  // Standard operation, initial state OFF

 // Box assignments - using correct permanent IDs
 #define PINIO1_BOX             47    // USER1 (BOX_PERMANENT_ID_USER1)
 #define PINIO2_BOX             48    // USER2 (BOX_PERMANENT_ID_USER2)
 #define PINIO3_BOX             57    // USER3 (BOX_PERMANENT_ID_USER3)

 // Custom names for the UI
 #define BOX_USER1_NAME         "CAM 1,2"
 #define BOX_USER2_NAME         "12V BEC"
 #define BOX_USER3_NAME         "AUX3"
 
 // Beeper
 #define USE_BEEPER
 #define BEEPER                 PC2
 #define BEEPER_INVERTED
 
 // Leds
 #define USE_LED_STRIP
 #define WS2811_PIN             PE9
 #define LED0                   PD10
 #define LED1                   PD11
 #define LED2                   PA8
 
 // Others
 #define USE_CAMERA
 #define CAMERA_PIN             PB9
 #define MAX_PWM_OUTPUT_PORTS   12
 #define USE_SERIAL_4WAY_BLHELI_INTERFACE
 #define SETTING_I2C_SPEED_DEFAULT    4 // or whatever the appropriate default I2C speed should be
 
 // Serial port assignments
 #define SERIALRX_UART           SERIAL_PORT_USART5
 //#define ESC_SENSOR_UART         SERIAL_PORT_USART3

 // Default to ESC telemetry for voltage and current
 #define DEFAULT_VOLTAGE_METER_SOURCE VOLTAGE_METER_ESC
 #define DEFAULT_CURRENT_METER_SOURCE CURRENT_METER_ESC
 #define DEFAULT_CURRENT_METER_SCALE 120
 
 // DShot settings
 #define USE_DSHOT
 #define DEFAULT_DSHOT_MODE DSHOT300  // Options: DSHOT150, DSHOT300, DSHOT600, DSHOT1200
 #define DEFAULT_DSHOT_BITBANG DSHOT_BITBANG_ON
 #define USE_DSHOT_BURST          // DShot burst mode (for more efficient DMA transfers) 
 
 // DShot telemetry settings
 #define USE_ESC_SENSOR
 #define USE_DSHOT_DMAR         // DMA for multiple outputs simultaneously
 
 // ESC Sensor settings
 #define SETTING_ESC_SENSOR_LISTEN_ONLY_DEFAULT 0
 #define USE_SERIAL_4WAY_BLHELI_INTERFACE
 
 // RPM filter settings
 //#define SETTING_RPM_GYRO_FILTER_ENABLED_DEFAULT    false
 //#define SETTING_RPM_GYRO_HARMONICS_DEFAULT         3
 //#define SETTING_RPM_GYRO_MIN_HZ_DEFAULT            100
 //#define SETTING_RPM_GYRO_Q_DEFAULT                 500
 
 // IO port definitions
 #define TARGET_IO_PORTA         0xffff
 #define TARGET_IO_PORTB         0xffff
 #define TARGET_IO_PORTC         0xffff
 #define TARGET_IO_PORTD         0xffff
 #define TARGET_IO_PORTE         0xffff
 #define TARGET_IO_PORTF         0xffff
 #define TARGET_IO_PORTG         0xffff